name: Publish release and docker Image
on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:

  build-wheel:
    name: Build Python Wheel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          path: 'code/'
          fetch-depth: 2

      - name: Initialize Python with specific in pyproject.toml
        uses: actions/setup-python@v6
        with:
          python-version-file: "code/pyproject.toml"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.9.4"

      - name: Set Build Metadata
        id: metadata
        run: |
          echo "version=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT
          echo "author=${GITHUB_REPOSITORY_OWNER}" >> $GITHUB_OUTPUT
          echo "commit=$(git --git-dir ${GITHUB_WORKSPACE}/code/.git/ rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "time=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Inject version info
        run: |
          about="${GITHUB_WORKSPACE}/code/src/fxxk_xiaoyoubang/__about__.py"
          sed -i "s|\${author}|${{ steps.metadata.outputs.author }}|" ${about}
          sed -i "s|\${git-commit-hash}|${{ steps.metadata.outputs.commit }}|" ${about}
          sed -i "s|\${build-timestamp}|${{ steps.metadata.outputs.time }}|" ${about}
          sed -i "s|0\.0\.0|${{ steps.metadata.outputs.version }}|" ${about}

      - name: Build Package Wheels
        run: |
          uv build -o ${GITHUB_WORKSPACE}/build/ ${GITHUB_WORKSPACE}/code/

      - name: Upload to Actions Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fxxk-xiaoyoubang_wheel
          path: |
            build/*.whl

      - name: Publish to Release
        uses: softprops/action-gh-release@v2
        id: release
        with:
          files: |
            build/*.whl

      - name: Generate Release Header
        run: |
          header="${GITHUB_WORKSPACE}/code/.github/workflows/template/release-header.md"
          sed -i "s|\${ref}|${{ steps.metadata.outputs.commit }}|" ${header}
          sed -i "s|\${date}|${{ steps.metadata.outputs.time }}|" ${header}
          sed -i "s|\${version}|${{ steps.metadata.outputs.version }}|" ${header}
          sed -i "s|\${link}|${{ fromJSON(steps.release.outputs.assets)[0].browser_download_url }}|" ${header}

      - name: Add footer to Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: code/.github/workflows/template/release-header.md
          append_body: True


  build-docker:
    name: Build Docker Image And Push
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - name: Get Reference of HEAD and Docker Image Version
        id: metadata
        run: |
          echo "commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "version=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT
          echo "main_version=${version%%+*}" >> $GITHUB_OUTPUT
          echo "docker_version=${version#*docker}" >> $GITHUB_OUTPUT
          echo "package_version=${main_version}" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          build-args: |
            VERSION="${{ steps.metadata.outputs.package_version }}"
            REF="${{ steps.metadata.outputs.commit }}"
            AUTHOR="${{ github.repository_owner }}"
          push: true
          tags: |
            latest
            ${{ steps.metadata.outputs.docker_version }}
